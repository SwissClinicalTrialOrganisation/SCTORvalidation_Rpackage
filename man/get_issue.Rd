% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_label.R, R/close_issue.R, R/get_comments.R,
%   R/get_issue.R, R/get_issues.R, R/get_test_reports.R, R/post_comment.R,
%   R/remove_label.R
\name{add_label}
\alias{add_label}
\alias{close_issue}
\alias{get_comments}
\alias{get_issue}
\alias{get_issues}
\alias{get_test_reports}
\alias{post_comment}
\alias{remove_label}
\title{Interact with the GitHub API to get or set issue information}
\usage{
add_label(issue, label, repo = sctoreports())

close_issue(issue, repo = sctoreports())

get_comments(issue, repo = sctoreports())

get_issue(issue, repo = sctoreports())

get_issues(repo = sctoreports())

get_test_reports(repo = sctoreports(), approved_only = FALSE)

post_comment(issue, comment, repo = sctoreports())

remove_label(issue, label, repo = sctoreports())
}
\arguments{
\item{issue}{issue number}

\item{label}{label to remove}

\item{repo}{repository name}

\item{approved_only}{only return approved packages (logical)}

\item{comment}{the comment to be made}
}
\value{
a list of comments

dataframe
}
\description{
These functions provide various ways to interact with github issues.

Getting issues:

\code{get_issue} downloads a single issue from a repository.

\code{get_issues} downloads all issues from a repository.

\code{get_test_reports} downloads all issues from a repository, filtering those with
test labels, and converts the issue to a dataframe.

Labels:

\code{add_label} adds a particular label to an issue.

\code{remove_label} removes a particular label from an issue.

Comments:

\code{get_comments} downloads all comments from an issue.

\code{post_comment} posts a comment to an issue.

Closing an issue:

\code{close_issue} closes an issue.

These functions are primarily for the use in github actions rather than for
the standard user.
}
\examples{
# remove_label(issue = 1, label = "test")

# post_comment(issue = 1, comment = "This is a test comment")
# get_issue(21)
# post_comment(issue = 1, comment = "This is a test comment")
# remove_label(issue = 1, label = "test")

}
